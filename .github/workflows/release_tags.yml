name: Rust
env:
  CARGO_TERM_COLOR: always
on:
  push:
    tags:
      - 'release/v*'
jobs:
  # Test
  build_test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-test
    # - name: Lint
    #   run: |
    #     cargo fmt --all -- --check
    #     cargo clippy -- -D warnings
    # - name: Install cargo check tools
    #   run: |
    #     cargo install --locked cargo-deny || true
    #     cargo install --locked cargo-outdated || true
    #     cargo install --locked cargo-udeps || true
    #     cargo install --locked cargo-audit || true
    #     cargo install --locked cargo-pants || true
    # - name: Check
    #   run: |
    #     cargo deny check
    #     cargo outdated --exit-code 1
    #     cargo udeps
    #     rm -rf ~/.cargo/advisory-db
    #     cargo audit
    #     cargo pants
    - name: Cargo Test
      run: |
        cargo test

  # Build Linux
  build_linux:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-build
    - name: Build Cargo Release - Linux
      run: | 
        cargo build --release
        zip -j knbackup_linux.zip ./target/release/knbackup
    - name: Upload binary file for linux.
      uses: actions/upload-artifact@v3
      with:
        name: knbackup_linux.zip
        path: knbackup_linux.zip
  
  # Build Windows
  build_windows64:
    needs: [build_test]
    runs-on: windows-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-build
    - name: Build Cargo Release - Windows
      run: | 
        cargo build --release
        Move-Item -Path "target\release\knbackup.exe" -Destination ".\"
        Compress-Archive -Path knbackup.exe -Destination knbackup_windows64.zip 
    - name: Upload binary file for Windows.
      uses: actions/upload-artifact@v3
      with:
        name: knbackup_windows64.zip
        path: knbackup_windows64.zip
  
  # Release publish
  release_create:
    needs: [build_linux, build_windows64]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Extract tag without prefix
        id: extract_tag
        run: echo ::set-output name=TAG_WITHOUT_PREFIX::${GITHUB_REF/refs\/tags\/release\//}
      - name: Download binary file for Linux.
        uses: actions/download-artifact@v3
        with:
          name: knbackup_linux.zip
      - name: Download binary file for Windows.
        uses: actions/download-artifact@v3
        with:
          name: knbackup_windows64.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.extract_tag.outputs.tag_without_prefix }}
          body: New Release
          draft: false
          prerelease: true
      - name: Upload Release Artifact - Linux release
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: knbackup_linux.zip
          asset_name: knbackup_release_${{ steps.extract_tag.outputs.tag_without_prefix }}_linux.zip
          asset_content_type: application/zip
      - name: Upload Release Artifact - Windows release
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./knbackup_windows64.zip
          asset_name: knbackup_release_${{ steps.extract_tag.outputs.tag_without_prefix }}_windows64.zip
          asset_content_type: application/zip